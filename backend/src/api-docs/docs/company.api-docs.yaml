components:
  schemas:
    Company:
      type: object
      required:
        - name
        - verif_boolean
      properties:
        name:
          type: string
          unique: true
        verif_boolean:
          allOf:
            - type: object
              properties:
                is_verified:
                  type: boolean
                  default: true  # Set to false when backOffice is ready
                is_active:
                  type: boolean
                  default: true
        profile_pic:
          type: string
        contact_info:
          allOf:
            - type: object
              properties:
                email:
                  type: string
                phone:
                  type: string
                street:
                  type: string
                street_number:
                  type: number
                box:
                  type: string
                city:
                  type: string
                postal_code:
                  type: number
                country:
                  type: string
        fields:
          type: array
          items:
            type: string
        creation_date:
          type: string
          format: date-time
        creator_username:
          type: string
        admins:
          type: array
          items:
            type: string
        worker:
          type: array
          items:
            type: string
        registration_date:
          type: string
          format: date-time
        deletion_date:
          type: string
          format: date-time
        offers:
          type: array
          items:
            type: string
        n_finished_contracts:
          type: number
paths:
  # POST
  /addCompany:
    post:
      summary: "Add a new company"
      description: "Creates a new company record in the system."
      operationId: "createCompany"
      tags:
        - "Company"
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
      responses:
        '201':
          description: "Company created successfully."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '400':
          description: "Bad request due to invalid input."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid input data"
        '401':
          description: "Unauthorized request."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        '500':
          description: "Internal server error."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"
  #GET
  /getCompanies:
    get:
      summary: "Get a list of companies"
      description: "Retrieves a list of companies based on query parameters."
      operationId: "getCompanies"
      tags:
        - "Company"
      # Uncomment the following line if authentication is required
      # security:
      #   - BearerAuth: []
      parameters:
        - in: query
          name: options
          schema:
            type: object
            additionalProperties: true
          description: "Query parameters to filter companies."
      responses:
        '200':
          description: "List of companies retrieved successfully."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
        '400':
          description: "Bad request due to invalid input or an unknown error."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An unknown error occurred"
        '500':
          description: "Internal server error."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"
  /getCompany/{param}:
    get:
      summary: "Get detailed company information"
      description: "Retrieves detailed information for a specific company identified by its ID or name."
      operationId: "getCompany"
      tags:
        - "Company"
      # Uncomment the following line if authentication is required
      # security:
      #   - BearerAuth: []
      parameters:
        - in: path
          name: param
          required: true
          schema:
            type: string
            description: "ID or name of the company."
            example: "60d0fe4f5311236168a109ca"
      responses:
        '200':
          description: "Company details retrieved successfully."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '400':
          description: "Bad request due to invalid input or an unknown error."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An unknown error occurred"
        '404':
          description: "Company not found."
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Company not found"
        '500':
          description: "Internal server error."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"
  /getCompanyBasicInfo/{param}:
    get:
      summary: "Get basic company information"
      description: "Retrieves basic information (ID, name, profile picture) for a specific company identified by its ID or name."
      operationId: "getCompanyBasicInfo"
      tags:
        - "Company"
      # Uncomment the following line if authentication is required
      # security:
      #   - BearerAuth: []
      parameters:
        - in: path
          name: param
          required: true
          schema:
            type: string
            description: "ID or name of the company."
            example: "60d0fe4f5311236168a109ca"
      responses:
        '200':
          description: "Basic company information retrieved successfully."
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    example: "60d0fe4f5311236168a109ca"
                  name:
                    type: string
                    example: "Example Company"
                  profile_pic:
                    type: string
                    example: "https://example.com/profile-pic.jpg"
        '400':
          description: "Bad request due to invalid input or an unknown error."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid parameter length"
        '404':
          description: "Company not found."
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Company not found"
        '500':
          description: "Internal server error."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"
  # PUT
  /updateCompany/{param}:
    put:
      summary: "Update company information"
      description: "Updates the information of a specific company identified by its ID or name."
      operationId: "updateCompany"
      tags:
        - "Company"
      # Uncomment the following line if authentication is required
      # security:
      #   - BearerAuth: []
      parameters:
        - in: path
          name: param
          required: true
          schema:
            type: string
            description: "ID or name of the company to update."
            example: "60d0fe4f5311236168a109ca"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
      responses:
        '200':
          description: "Company information updated successfully."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '400':
          description: "Bad request due to invalid input or an unknown error."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid parameter length"
        '404':
          description: "Company not found."
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Company not found"
        '500':
          description: "Internal server error."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"
  # DELETE
  /deleteCompany/{id}:
    delete:
      summary: "Delete a company"
      description: "Deletes a specific company identified by its ID."
      operationId: "deleteCompany"
      tags:
        - "Company"
      # Uncomment the following line if authentication is required
      # security:
      #   - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            description: "ID of the company to delete."
            example: "60d0fe4f5311236168a109ca"
      responses:
        '200':
          description: "Company deleted successfully."
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Company deleted successfully"
        '400':
          description: "Bad request due to invalid input or an unknown error."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An unknown error occurred"
        '404':
          description: "Company not found."
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Company not found"
        '500':
          description: "Internal server error."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"


